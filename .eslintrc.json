{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx", "jest"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "no-console": "error",
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "viem",
                "importNames": ["getAddress", "isAddress"],
                "message": "Please note the `getAddress` and `isAddress` functions work exclusively with checksummed addresses. If your need to verify or retrieve an address regardless of its format, you should use the corresponding functions in `evm.util.ts`."
              },
              {
                "name": "@nestjs/config",
                "importNames": ["ConfigModule", "ConfigService"],
                "message": "Please use providers from @narval/config-module instead"
              },
              {
                "name": "@nestjs/common",
                "importNames": ["LoggerService", "Logger"],
                "message": "Please use providers from @narval/nestjs-shared instead. If using `new Logger`, replace it by `LoggerService` through the dependency injection."
              }
            ]
          }
        ],
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "env": {
        "jest": true
      },
      "rules": {
        "jest/consistent-test-it": "error",
        "jest/no-disabled-tests": "error",
        "jest/no-focused-tests": "error",
        "jest/no-identical-title": "error",
        "jest/valid-expect": "error"
      }
    }
  ]
}
