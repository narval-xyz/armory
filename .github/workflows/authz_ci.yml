name: AuthZ CI

on:
  push:
    paths:
      - apps/authz-node/**
      - .github/workflows/**
      - Makefile
      - jest.config.ts
      - jest.preset.js
      - .eslintrc.json
      - .prettierrc

jobs:
  build-and-test:
    name: Build and test

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - '5432:5432'
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - '6379:6379'
        env:
          REDIS_PORT: 6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.4.0'

      - name: Install dependencies
        run: |
          make install/ci

      - name: Code format
        shell: bash
        run: |
          make format/check
          make lint/check

      # TODO: Finish once the authz-node has a database.
      - name: Setup database and Prisma types
        shell: bash
        run: |
          # make orchestration/test/copy-default-env
          # make orchestration/test/db/setup

          # Generate the orchestration Prisma client types to prevent the type
          # tests to fail.
          make orchestration/db/generate-types

      - name: Test types
        shell: bash
        run: |
          make authz/test/type

      - name: Test unit
        shell: bash
        run: |
          make authz/test/unit

      - name: Test integration
        shell: bash
        run: |
          make authz/test/integration

      # - name: Test E2E
      #   shell: bash
      #   run: |
      #     make orchestration/test/e2e
