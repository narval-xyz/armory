NODE_ENV=development

PORT=3011

APP_UID=local-dev-vault-instance-1

# OPTIONAL: Sets the admin API key instead of generating a new one during the
# provision.
#
# Key should be hashed, like this: `echo -n "my-api-key" | openssl dgst -sha256 | awk '{print $2}'`
# Plain text API key: vault-admin-api-key
ADMIN_API_KEY=d4a6b4c1cb71dbdb68a1dd429ad737369f74b9e264b9dfa639258753987caaad

# === Database ===

# APP db connection string
APP_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vault?schema=public

# Migrator db credentials.
# host/port/name should be the same, username&password may be different
APP_DATABASE_USERNAME=postgres
APP_DATABASE_PASSWORD=postgres
APP_DATABASE_HOST=host.docker.internal
APP_DATABASE_PORT=5432
APP_DATABASE_NAME=vault

# === Encryption ===

# Determine the encryption module keyring type.
# Either "awskms" or "raw".
KEYRING_TYPE=raw

# If using raw keyring, master password for encrypting data
MASTER_PASSWORD=unsafe-local-dev-master-password

# If using awskms keyring, provide the ARN of the KMS encryption key instead of a master password
MASTER_AWS_KMS_ARN=

# Base URL where the Vault is deployed. Will be used to verify jwsd request
# signatures.
BASE_URL=http://localhost:3011

# === OpenTelemetry configuration ===

# See https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/
OTEL_SDK_DISABLED=true
# OTEL Collector container HTTP port.
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
OTEL_LOGS_EXPORTER=otlp
OTEL_LOG_LEVEL=error
OTEL_RESOURCE_ATTRIBUTES=deployment.environment=local
