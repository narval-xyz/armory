name: 'narval'
services:
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    networks:
      - armory_stack
    volumes:
      - ./.data/psql:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: 'bitnami/redis:7.0'
    ports:
      - '6379:6379'
    expose:
      - '6379'
    networks:
      - armory_stack
    environment:
      ALLOW_EMPTY_PASSWORD: 'true'
    logging:
      driver: none
    volumes:
      - ./.data/redis:/data

  armory:
    image: armory/local:latest
    build:
      context: ./
      dockerfile: local.dockerfile
    container_name: armory
    command: ['/bin/bash', '-c', 'make armory/db/migrate/deploy && make armory/start/dev']
    ports:
      - '3005:3010'
    networks:
      - armory_stack
    environment:
      - PORT=3010
      - APP_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/armory?schema=public
      - REDIS_HOST=redis
      - MANAGED_DATASTORE_BASE_URL=http://armory:3010/v1/data
      - POLICY_ENGINE_URLS=http://policy_engine_0:3010,http://policy_engine_1:3010,http://policy_engine_2:3010
      - POLICY_ENGINE_ADMIN_API_KEYS=engine-admin-api-key,engine-admin-api-key,engine-admin-api-key
    volumes:
      - ./packages:/app/packages
      - ./apps:/app/apps
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  policy_engine_0:
    image: armory/local:latest
    build:
      context: ./
      dockerfile: local.dockerfile
    container_name: policy-engine-0
    command: ['/bin/bash', '-c', 'make policy-engine/db/migrate/deploy && make policy-engine/start/dev']
    ports:
      - '3020:3010'
    networks:
      - armory_stack
    environment:
      - APP_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/engine-0?schema=public
      - SIGNING_PROTOCOL=mpc
      - TSM_URL=http://host.docker.internal:8500
      - TSM_API_KEY=apikey0
      - TSM_PLAYER_COUNT=3
      - ADMIN_API_KEY=dde1fba05d6b0b1a40f2cd9f480f6dcc37a6980bcff3db54377a46b056dc472c # engine-admin-api-key
    volumes:
      - ./packages:/app/packages
      - ./apps:/app/apps
    depends_on:
      postgres:
        condition: service_healthy
      armory:
        condition: service_started

  policy_engine_1:
    image: armory/local:latest
    build:
      context: ./
      dockerfile: local.dockerfile
    container_name: policy-engine-1
    command: ['/bin/bash', '-c', 'make policy-engine/db/migrate/deploy && make policy-engine/start/dev']
    ports:
      - '3021:3010'
    networks:
      - armory_stack
    environment:
      - APP_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/engine-1?schema=public
      - SIGNING_PROTOCOL=mpc
      - TSM_URL=http://host.docker.internal:8501
      - TSM_API_KEY=apikey1
      - TSM_PLAYER_COUNT=3
      - ADMIN_API_KEY=dde1fba05d6b0b1a40f2cd9f480f6dcc37a6980bcff3db54377a46b056dc472c # engine-admin-api-key
    volumes:
      - ./packages:/app/packages
      - ./apps:/app/apps
    depends_on:
      postgres:
        condition: service_healthy
      armory:
        condition: service_started

  policy_engine_2:
    image: armory/local:latest
    build:
      context: ./
      dockerfile: local.dockerfile
    container_name: policy-engine-2
    command: ['/bin/bash', '-c', 'make policy-engine/db/migrate/deploy && make policy-engine/start/dev']
    ports:
      - '3022:3010'
    networks:
      - armory_stack
    environment:
      - APP_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/engine-2?schema=public
      - SIGNING_PROTOCOL=mpc
      - TSM_URL=http://host.docker.internal:8502
      - TSM_API_KEY=apikey2
      - TSM_PLAYER_COUNT=3
      - ADMIN_API_KEY=dde1fba05d6b0b1a40f2cd9f480f6dcc37a6980bcff3db54377a46b056dc472c # engine-admin-api-key
    volumes:
      - ./packages:/app/packages
      - ./apps:/app/apps
    depends_on:
      postgres:
        condition: service_healthy
      armory:
        condition: service_started

  vault:
    image: armory/local:latest
    build:
      context: ./
      dockerfile: local.dockerfile
    container_name: vault
    command: ['/bin/bash', '-c', 'make vault/db/migrate/deploy && make vault/start/dev']
    ports:
      - '3011:3010'
    networks:
      - armory_stack
    environment:
      - PORT=3010
      - APP_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/vault?schema=public
      - ADMIN_API_KEY=d4a6b4c1cb71dbdb68a1dd429ad737369f74b9e264b9dfa639258753987caaad # vault-admin-api-key
    volumes:
      - ./packages:/app/packages
      - ./apps:/app/apps
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  armory_stack:
